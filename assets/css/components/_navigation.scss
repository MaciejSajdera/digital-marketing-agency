/* MENUS */

.main-navigation {
	clear: both;
	display: block;
	float: left;
	width: 100%;

	ul {
		list-style: none;
		margin: 0;
		padding-left: 0;

		ul {
			box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);
			float: left;
			position: absolute;
			top: 1.5em;
			left: -999em;
			z-index: 99999;

			ul {
				left: -999em;
				top: 0;
			}

			li {
				&:hover > ul,
				&.focus > ul {
					left: 100%;
				}
			}

			a {
				width: 200px;
			}

			:hover > a,
			.focus > a {
			}

			a:hover,
			a.focus {
			}
		}

		li:hover > ul,
		li.focus > ul {
			left: auto;
		}
	}

	li {
		float: left;
		position: relative;
		padding: 0.5em 0em 1em;
		margin: 0 1em;

		@media screen and (max-width: 1200px) {
			margin: 0 0.5em;
		}

		&:hover > a,
		&.focus > a {
		}

		// &:after {
		// 	content: "";
		// 	display: block;
		// 	position: absolute;
		// 	height: 2px;
		// 	width: 0%;
		// 	background: $color_main-theme;
		// 	bottom: 0;
		// 	transition: 0.2s ease-in-out;
		// }

		&:before {
			content: "";
			display: block;
			position: absolute;
			height: 3px;
			width: 0%;
			background: $color_main-theme;
			top: 0;
			transition: 0.2s ease-in-out;
		}

		&:last-child {
			&:before {
				display: none;
			}
		}
	}

	.in-left {
		&:after,
		&:before {
			width: 100%;
			left: 0;
		}
	}

	.in-bottom {
		&:after,
		&:before {
			width: 100%;
			left: 0;
		}
	}

	.out-bottom {
		&:after,
		&:before {
			width: 0%;
			left: 0;
		}
	}

	.in-top {
		&:after,
		&:before {
			width: 100%;
			left: 0;
		}
	}

	.out-top {
		&:after,
		&:before {
			width: 0%;
			left: 0;
		}
	}

	.in-right {
		&:after,
		&:before {
			width: 100%;
			right: 0;
		}
	}

	.out-left {
		&:after,
		&:before {
			width: 0%;
			left: 0;
		}
	}

	.out-right {
		&:after,
		&:before {
			width: 0%;
			right: 0;
		}
	}

	.current_page_item {
		&:after,
		&:before {
			width: 100%;
			right: 0;
		}
	}

	a {
		text-decoration: none;
	}

	.current_page_item > a,
	.current-menu-item > a,
	.current_page_ancestor > a {
	}
}

/* Small menu. */
.menu-toggle,
.main-navigation.toggled ul {
	display: block;
}

/* Switching from toggle menu to full display */
@media screen and (min-width: 992px) {
	.menu-toggle {
		display: none;
	}
	.main-navigation ul {
		display: flex;
		justify-content: flex-end;
	}
}

.comment-navigation,
.posts-navigation,
.post-navigation {
	.site-main & {
		margin: 0 0 1.5em;
		overflow: hidden;
	}

	.nav-previous {
		float: left;
		width: 50%;
	}

	.nav-next {
		float: right;
		text-align: right;
		width: 50%;
	}
}

body.home {
	.site-header {
		position: absolute;
		top: 4em;
		margin-top: 0;
	}
}

.site-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 4em 0em;
	width: 100%;
	background-position: bottom;
	position: static;
	margin-top: 4em;

	@media screen and (min-width: 992px) {
		padding: 4em 2em;
	}

	@media screen and (min-width: 1400px) {
		padding: 4em 10em;
	}

	.main-navigation {
		.nav-menu {
			display: flex;
			justify-content: flex-end;

			li {
				a {
					@include fluid-type($min_width, $max_width, 18px, 20px);
				}
			}
		}
	}

	a {
		text-transform: uppercase;
	}
}

.top-banner {
	padding: 0em 5%;
	height: 5em;
	position: fixed;
	width: 100%;
	background: #fd743a;
	z-index: 999;
	align-items: center;
	display: flex;
	flex-flow: row;
	justify-content: space-between;
	align-items: center;
	top: 0;
	box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);

	@media screen and (min-width: 1400px) {
		padding: 1em 15%;
	}

	@media screen and (min-width: 1700px) {
		padding: 1em 20%;
	}

	&__left {
		display: flex;
		flex-flow: row;
		align-items: center;
		justify-content: space-between;

		@media screen and (min-width: 992px) {
			width: 100%;
		}

		@media screen and (max-width: 992px) {
			a {
				@include fluid-type($min_width, $max_width, 18px, 20px);
			}
		}
	}

	&__right {
		@media screen and (min-width: 992px) {
			display: none;
		}
	}

	span {
		color: $color_text-light;
	}
}

//header mobile menu
header {
	.main-navigation {
		@media screen and (max-width: 992px) {
			position: absolute;

			.menu-menu-1-container {
				display: none;
			}
		}
	}
}

.mobile-menu-container {
	position: fixed;
	top: 5em;
	transform: translateY(-100em);
	height: 100%;
	width: 100%;
	transition: all 0.4s ease-in-out;
	background: #d85e2a;
	z-index: 1;
	text-align: center;

	.menu-menu-1-container {
		height: 80%;
		display: flex;
		justify-content: center;
		align-items: center;

		ul {
			list-style: none;
			margin: 0;
			padding: 0;
			height: 70%;
			display: flex;
			flex-flow: column;
			justify-content: space-around;
			align-items: center;

			li {
				a {
					@include fluid-type($min_width, $max_width, 22px, 30px);
				}
			}

			.orange-oval-button-menu a {
				background: $color_dark-grey;
				color: $color_text-light;
				border-radius: 100rem;
				padding: 0.5em 1.5em;
				text-align: center;
				text-transform: uppercase;
				font-weight: 700;
				// white-space: nowrap;
				@include fluid-type($min_width, $max_width, 18px, 20px);
				transition: all 0.3s ease-in-out;
				border: 2px solid $color_dark-grey;

				&:hover {
					transform: scale(1.05);
				}
			}
		}
	}
}

.mobile-menu-open {
	transform: translateY(0em);
}

.menu-container {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	align-content: center;
	height: 100%;
	position: relative;
}

//Draw a white circle outside of the menu lines and align its content div in the center
.menu-circle {
	width: 60px;
	height: 60px;
	background-color: #fff;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-content: center;
	align-items: center;
	cursor: pointer;
	transition: all 0.3s;
}

//A simple wrapper for our menu lines. Once again thanks flexbox! It's really confusing to work with paddings/margins for the spacing area between lines without flexbox.
.line-wrapper {
	width: 50px;
	height: 26px;
	display: flex;
	justify-content: space-around;
	flex-direction: column;
	align-items: center;
}

//Our menu lines are just empty spans. We give them height, width, and display properties and poof! They appear on the screen!
.line {
	height: 3px;
	width: 30px;
	background: $color_main-theme;
	display: block;
	border-radius: 50px;
	transition: all 0.3s;
}

//When the user clicks on the menu, we need to make some transformations. Rotate the first line 45 degrees, the third line -45 degrees to draw an X symbol, and throw the middle line on the left and fade it away.
//TranslateX and TranslateY are calculated with the very sophisticated method of trial and error. Yeah I know. Since we're rotating the element, the browser thinks that the center rotates too. So you have to calculate or use some framework like Greensock for crossbrowser compatibility.
.line-wrapper.clicked .line:nth-child(1) {
	transform: rotate(45deg) translateY(7px) translateX(8px);
}

.line-wrapper.clicked .line:nth-child(3) {
	transform: rotate(-45deg) translateY(-5px) translateX(6px);
}

.line-wrapper.clicked .line:nth-child(2) {
	transform: translateX(-100%);
	opacity: 0;
}

//Top and Left properties are declared for Firefox. Chrome/Edge are clever enough to understand that the absolute position refers to the element that comes before/after them. Firefox is one of those special kids that needs some extra help.
.menu-circle:before,
.menu-circle:after {
	content: "";
	display: block;
	height: 150px;
	width: 150px;
	position: absolute;
	border-radius: 50%;
	transform: scale(0);
	transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
	top: calc(50% - 75px);
	left: calc(50% - 75px);
}

.menu-circle:before {
	background: lighten($color__background-body, 25);
	z-index: -1;
}

.menu-circle:after {
	background: lighten($color__background-body, 20);
	z-index: -2;
}

.menu-circle.clicked:before {
	transform: scale(1);
	opacity: 0;
}

.menu-circle.clicked:after {
	transform: scale(1.75);
	opacity: 0;
}
